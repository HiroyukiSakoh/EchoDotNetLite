<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SkstackIpDotNet</name>
    </assembly>
    <members>
        <member name="T:SkstackIpDotNet.BytesConvert">
            <summary>
            バイト配列-16進数ユーティリティ
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.BytesConvert.ToHexString(System.Byte[])">
            <summary>
            バイト配列から16進数の文字列を生成します。
            </summary>
            <param name="bytes">バイト配列</param>
            <returns>16進数文字列</returns>
        </member>
        <member name="M:SkstackIpDotNet.BytesConvert.FromHexString(System.String)">
            <summary>
            16進数の文字列からバイト配列を生成します。
            </summary>
            <param name="str">16進数文字列</param>
            <returns>バイト配列</returns>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKAddNbrCommand">
            <summary>
            指定した IP アドレスと 64bit アドレス情報を、IP 層のネイバーキャッシュに Reachable 状態で登録します。
            これによってアドレス要請を省略して直接 IP パケットを出力することができます。
            同じ IP アドレスがエントリーされている場合は設定が上書きされます。
            ネイバーキャッシュがすでに一杯の場合は最も古いエントリーが削除され、ここで指定した IPアドレスが登録されます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKAddNbrCommand.#ctor(SkstackIp.Commands.SKAddNbrCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKAddNbrCommand.Input.Ipaddr">
            <summary>
            登録する IPv6 アドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKAddNbrCommand.Input.Macaddr">
            <summary>
            登録 IPv6 アドレスに対応する 64bit アドレス
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKCloseCommand">
            <summary>
            指定したハンドルに対応する TCP コネクションの切断要求を発行します。
            切断処理の結果は ETCP イベントで通知されます。
            すでに切断初折が実行中の場合、本コマンドを発行すると FAIL ER10 になります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKCloseCommand.#ctor(SkstackIp.Commands.SKCloseCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKCloseCommand.Input.Handle">
            <summary>
            ハンドル番号
            SKCONNECT で接続を確立した際に受け取ったハンドル番号を指定します。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKConnectCommand">
             <summary>
            指定した宛先に TCP の接続要求を発行します。
            相手側は指定したポートで TCP の接続待ち受けを開始している必要があります。
            接続処理の結果は ETCP イベントで通知されます。接続に成功した場合、ETCP イベントでコネクションに対応するハンドル番号が通知されます。
            以後、データ送信や切断処理はこのハンドル番号を指定します。
            同じLPORTとRPORTの組み合わせで E すでに何らかの宛先と接続が確立している場合、ER10 エラーとなります。
            このためLPORTは 0 以外のランダムな数値を指定することを推奨します。
            ( LPORTは自端末の待受ポート番号である必要はありません)
            接続処理の実行途中に本コマンドが発行されると ER10 エラーとなります。
            指定可能な待ち受け数とポート番号の初期値はリリースノートをご参照ください
             </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKConnectCommand.#ctor(SkstackIp.Commands.SKConnectCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKConnectCommand.Input.Ipaddr">
            <summary>
            接続先 IPv6 アドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKConnectCommand.Input.RPort">
            <summary>
            接続先ポート番号 値域：1-65534
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKConnectCommand.Input.LPort">
            <summary>
            接続元ポート番号 値域：1-65534
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKEraseCommand">
            <summary>
            レジスタ保存用の不揮発性メモリエリアを初期化して、未保存状態に戻します。
            本コマンドを実行後、SKLOAD コマンドを発行すると SKLOAD コマンドは ER10 エラーを返すようになります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKEraseCommand.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKInfoCommand">
            <summary>
            現在の主要な通信設定値を表示します。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKInfoCommand.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKJoinCommand">
            <summary>
            指定したIPADDRに対して PaC（PANA 認証クライアント）として PANA 接続シーケンスを開始します。
            SKJOIN 発行前に PSK, PWD, Route-B ID 等のセキュリティ設定を施しておく必要があります。
            接続先は SKSTART コマンドで PAA として動作開始している必要があります。
            接続の結果はイベントで通知されます。
            PANA 接続シーケンスは PaC が PAA に対してのみ開始できます。
            接続元（PaC）：
             接続が完了すると、指定したIPADDRに対するセキュリティ設定が有効になり、以後の通信でデータが暗号化されます。
            接続先（PAA）：
             接続先はコーディネータとして動作開始している必要があります。
             PSK から生成した暗号キーを自動的に配布します。
             相手からの接続が完了すると接続元に対するセキュリティ設定が有効になり、以後の通信でデータが暗号化されます。
             １つのデバイスとの接続が成立すると、他デバイスからの新規の接続を受け付けなくなります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKJoinCommand.#ctor(SkstackIp.Commands.SKJoinCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKJoinCommand.Input.Ipaddr">
            <summary>
            接続先 IP アドレス
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKLl64Command">
            <summary>
            64 ビット MAC アドレスを IPv6 リンクローカルアドレスに変換した結果を表示します。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKLl64Command.Input.Addr64">
            <summary>
            64 ビット MAC アドレス
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKLoadCommand">
            <summary>
            不揮発性メモリに保存されている仮想レジスタの内容をロードします。
            何らかの要因でロードに失敗した場合、FAIL ER10 エラーになります。
            内容が保存されていない状態でロードを実行すると L ER10 になります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKLoadCommand.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKPingCommand">
            <summary>
            指定した IPv6 宛てに ICMP Echo request を送信します。
            Echo reply を受信すると EPONG イベントで通知されます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKPingCommand.#ctor(SkstackIp.Commands.SKPingCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKPingCommand.Input.Ipaddr">
            <summary>
            Ping 送信先の IPv6 アドレス
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKRegDevCommand">
            <summary>
            セキュリティを適用するため、指定した IP アドレスを端末に登録します。
            登録数が上限の場合、FAIL ER10 が戻ります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKRegDevCommand.#ctor(SkstackIp.Commands.SKRegDevCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKRegDevCommand.Input.Ipaddr">
            <summary>
            登録対象となる IPv6 アドレス
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKRejoinCommand">
            <summary>
            現在接続中の相手に対して再認証シーケンスを開始します。
            再認証シーケンスの前に SKJOIN による接続が成功している必要があり、接続していないとER10 になります。
            再認証に成功すると、暗号キーと PANA セッション期限が更新されます。
            PaC は、PAA が指定したセッションのライフタイムの 80%が経過した時点で、自動的に再認証シーケンスを実行します。
            このため SKREJOIN コマンドは基本的に発行する必要がありませんが、任意のタイミングで再認証したい場合には本コマンドを使います。
            PAA は、セッションが更新されずにライフタイムが過ぎるとセッション終了要請を自動的に発行します。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKRejoinCommand.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKResetCommand">
            <summary>
            プロトコル・スタックの内部状態を初期化します。
            すべての内部変数が初期値に戻ります。
            ただし 64bit アドレスだけは、S01 レジスタで設定した直近の値がそのまま再利用されます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKResetCommand.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKRmDevCommand">
            <summary>
            指定した IP アドレスのエントリーをネイバーテーブル、ネイバーキャッシュから強制的に削除します。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKRmDevCommand.#ctor(SkstackIp.Commands.SKRmDevCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKRmDevCommand.Input.Target">
            <summary>
            削除したいエントリーの IPv6 アドレス
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKSaveCommand">
            <summary>
            現在の仮想レジスタの内容を不揮発性メモリに保存します。
            何らかの要因で保存に失敗した場合、FAIL ER10 エラーになります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKSaveCommand.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKScanCommand">
            <summary>
            指定したチャンネルに対してアクティブスキャンまたは ED スキャンを実行します。
            アクティブスキャンは、PAN を発見する度に EPANDESC イベントが発生して内容が通知されます。その後、指定したすべてのチャンネルのスキャンが完了すると EVENT イベントが 0x1Eコードで発生して終了を通知します。
            ED スキャンは、スキャンが完了した時点で EEDSCAN イベントが発生します。
            Pairing 値(8 バイト)は S0A で設定します。
            Pairing ID が付与された拡張ビーコン要求を受信したコーディネータは、同じ Pairing 値が設定されている場合に、拡張ビーコンを応答します。
            MODE に 3 を指定すると、拡張ビーコン要求に Information Element を含めません。コーディネータは拡張ビーコンを応答します
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKScanCommand.#ctor(SkstackIp.Commands.SKScanCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input"></param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKScanCommand.Input.ScanMode">
            <summary>
            0:ED スキャン
            2:アクティブスキャン（IE あり）
            3:アクティブスキャン（IE なし）
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKScanCommand.Input.ChannelMask">
            <summary>
            スキャンするチャンネルをビットマップフラグで指定します。
            最下位ビットがチャンネル 33 に対応します。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKScanCommand.Input.Duration">
            <summary>
            各チャンネルのスキャン時間を指定します。
            スキャン時間は以下の式で計算されます。
            0.01 sec * (2^DURATION + 1)
            値域：0-14
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKSecEnableCommand">
            <summary>
            指定した IP アドレスに対する MAC 層セキュリティの有効・無効を指定します。
            指定する IPADDR は、事前に SKREGDEV コマンドで登録されている必要があります。登録されていない IP アドレスを指定すると FAIL ER10 になります。
            MODEが 1 の場合、指定したIPADDRに対するMACADDR情報が更新されます。
            MODE=1 で登録に成功した場合、このMACADDRに対応する MAC 層フレームカウンタが0 で初期化されます。
            MODEが 0 の場合、セキュリティの適用が無効になるだけで、MACADDR情報は更新されません（値は無視されます）。
            本コマンドによるセキュリティ設定は送信時に適用されるものです。受信時は、受信した MACフレームの内容により必要な復号化が行われます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKSecEnableCommand.#ctor(SkstackIp.Commands.SKSecEnableCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSecEnableCommand.Input.Mode">
            <summary>
            0:セキュリティ無効
            1:セキュリティ適用
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSecEnableCommand.Input.Ipaddr">
            <summary>
            セキィリティを適用する対象の IPv6 アドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSecEnableCommand.Input.Macaddr">
            <summary>
            対象 IPv6 アドレスに対応する 64bit アドレス
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKSendCommand">
            <summary>
            指定したハンドル番号に対応する TCP コネクションを介して接続相手にデータを送信します。
            送信処理の結果は ETCP イベントで通知されます。
            すでにデータが送信中の場合、本コマンドを発行すると FAIL ER10 になります。
            SKSEND は以下の形式で正確に指定する必要があります。
            1) アドレスは必ずコロン表記で指定してください。
            2) ポート番号は必ず４文字指定してください。
            3) データ長は必ず４文字指定してください。
            4) データは入力した内容がそのまま忠実にバイトデータとして扱われます。
            スペース、改行もそのままデータとして扱われます。
            5) データは、データ長で指定したバイト数、必ず入力してください。サイズが足りないと、指定したバイト数揃うまでコマンド受け付け状態から抜けません。
            6) データ部の入力はエコーバックされません。
            正しい例：
            SKSEND 1 0005 01234
            (“01234”は画面にエコーバックされません)
            ターミナルソフトで入力した場合、5 バイトで 0x30, 0x31. 0x32, 0x33, 0x34 が送信されます。
            受信側では、受信データの 16 進数 ASCII 表現で表示されます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKSendCommand.#ctor(SkstackIp.Commands.SKSendCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSendCommand.Input.Handle">
            <summary>
            ハンドル番号
            SKCONNECT で接続を確立した際に受け取ったハンドル番号を指定します。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSendCommand.Input.Datalen">
            <summary>
            送信データ長
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSendCommand.Input.Data">
            <summary>
            送信データ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKSendToCommand">
            <summary>
            指定した宛先に UDP でデータを送信します。
            SKSENDTO コマンドは以下の形式で正確に指定する必要があります。
            1) アドレスは必ずコロン表記で指定してください。
            2) ポート番号は必ず４文字指定してください。
            3) データ長は必ず４文字指定してください。
            4) セキュリティフラグは１文字で指定してください。
            5) データは入力した内容がそのまま忠実にバイトデータとして扱われます。スペース、改行もそのままデータとして扱われます。
            6) データは、データ長で指定したバイト数、必ず入力してください。サイズが足りないと、指定したバイト数揃うまでコマンド受け付け状態から抜けません。
            7) データ部の入力はエコーバックされません。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKSendToCommand.#ctor(SkstackIp.Commands.SKSendToCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSendToCommand.Input.Handle">
            <summary>
            送信元 UDP ハンドル
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSendToCommand.Input.Ipaddr">
            <summary>
            宛先 IPv6 アドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSendToCommand.Input.Port">
            <summary>
            宛先ポート番号
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSendToCommand.Input.Sec">
            <summary>
            暗号化オプション
            0: 必ず平文で送信
            1: SKSECENABLE コマンドで送信先がセキュリティ有効で登録されている場合、暗号化して送ります。登録されてない場合、または、暗号化無しで登録されている場合、データは送信されません。
            2: SKSECENABLE コマンドで送信先がセキュリティ有効で登録されている場合、暗号化して送ります。登録されてない場合、または、暗号化無しで登録されている場合、データは平文で送信されます。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSendToCommand.Input.Datalen">
            <summary>
            送信データ長
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSendToCommand.Input.Data">
            <summary>
            送信データ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKSetKeyCommand">
            <summary>
            指定されたキーインデックスに対する暗号キー(128bit)を、MAC 層セキュリティコンポーネントに登録します。
            本コマンドでキーを設定後、SKSECENABLE コマンドで対象デバイスのセキュリティ設定を有効にすることで、以後、そのデバイスに対するユニキャストが MAC 層で暗号化されます。
            指定したキーの桁が 16 バイト（ASCII 32 文字）より多い場合、ER06 になります。
            桁が 16 バイトより少ない場合、キーの内容が不定になり、OK または FAIL どちらになるか不定です。必ず 32 文字を指定してください。
            暗号キーの登録容量を超えている場合、FAIL ER10 になります。指定したキーインデックスに既存の設定がある場合、新しい設定で上書き登録されます。
            登録に成功するとカレントキーインデックスが指定したINDEXに切り替わります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKSetKeyCommand.#ctor(SkstackIp.Commands.SKSetKeyCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSetKeyCommand.Input.Index">
            <summary>
            キーインデックス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSetKeyCommand.Input.Key">
            <summary>
            128bit NWK 暗号キー
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKSetPskCommand">
            <summary>
            PANA 認証に用いる PSK を登録します。
            すでに PSK が登録されている場合は新しい値で上書きされます。
            KEYのバイト列は ASCII２文字で１バイトの HEX 表現で指定します。そのためLENで指定する PSK 長の２倍の文字入力が必要です。
            PSK を変更するには、SKRESET でリセットした後、再度、SKSETPSK コマンドを発行する必要があります。
            ＊）PSK は 16 バイトの必要があります。そのため LEN は 0x10 以外で FAIL ER06 になります。
            またKEYが 32 文字（１６バイト）に足りない場合は、不足分が不定値になります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKSetPskCommand.#ctor(SkstackIp.Commands.SKSetPskCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSetPskCommand.Input.Len">
            <summary>
            PSK のバイト長
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSetPskCommand.Input.Key">
            <summary>
            PSK バイト列
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKSetPwdCommand">
            <summary>
            PWD で指定したパスワードから PSK を生成して登録します。
            SKSETPSK による設定よりも本コマンドが優先され、PSK は本コマンドの内容で上書きされます。
            ＊）PWDの文字数が指定したLENに足りない場合、不足分は不定値になります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKSetPwdCommand.#ctor(SkstackIp.Commands.SKSetPwdCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSetPwdCommand.Input.Len">
            <summary>
            1-32
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSetPwdCommand.Input.Pwd">
            <summary>
            ASCII 文字
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKSetRBIDCommand">
            <summary>
            指定されたIDから各 Route-B ID を生成して設定します。
            Pairing ID (SA レジスタ)としてIDの下位 8 文字が設定されます。
            ＊）IDは ASCII 32 文字必要で、足りない場合、不足分が不定値になります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKSetRBIDCommand.#ctor(SkstackIp.Commands.SKSetRBIDCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSetRBIDCommand.Input.Id">
            <summary>
            32 桁の ASCII 文字
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKSregCommand">
            <summary>
            仮想レジスタの内容を表示・設定します。
            SREGに続けてVAL を指定すると値の設定、
            VALを指定しないとそのレジスタの現在値を表示します。
            値の場合は ESREG イベントで通知されます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKSregCommand.#ctor(SkstackIp.Commands.SKSregCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input"></param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSregCommand.Input.SReg">
            <summary>
            アルファベット‘S’で始まるレジスタ番号を１６進数で指定されます。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKSregCommand.Input.Val">
            <summary>
            レジスタに設定する値
            設定値域はレジスタ番号に依存します。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKStartCommand">
            <summary>
            端末を PAA (PANA 認証サーバ)として動作開始します。
            動作開始に先立って PSK, PWD, Route-B ID 等のセキュリティ設定を済ませておく必要があります。
            本コマンドを発行すると自動的にコーディネータとして動作開始し S15 レジスタ値は１になります。
            またアクティブスキャンに対して自動的に応答するようになります。
            本コマンド発行前に確立していた PANA セッションはクリアされます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKStartCommand.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKTableCommand">
            <summary>
            SKSTACK IP 内の各種テーブル内容を画面表示します。
            表示するテーブルに対応したイベントが発生します。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKTcpPortCommand">
            <summary>
            TCP の待ち受けポートを指定します。
            設定したポートは、SKSAVE コマンドで保存した後、電源再投入時にオートロード機能でロードした場合に有効になります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKTcpPortCommand.#ctor(SkstackIp.Commands.SKTcpPortCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKTcpPortCommand.Input.Index">
            <summary>
            設定可能な４つのポートのどれを指定するかのインデックス（１－４）
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKTcpPortCommand.Input.Port">
            <summary>
            設定する待ち受けポート番号(0-0xFFFF)
            0 を指定した場合、そのハンドルは未使用となりポートは着信しません。また 0xFFFF は予約番号で着信しません。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKTermCommand">
            <summary>
            現在確立している PANA セッションの終了を要請します。
            SKTERM は PAA、PaC どちらからでも実行できます。接続が確立していない状態でコマンドを発行すると ER10 になります。
            セッションの終了に成功すると暗号通信は解除されます。
            また PAA は他デバイスからの新しい接続を受け入れることができるようになります。
            セッションの終了要請に対して相手から応答がなく EVENT 28 が発生した場合、セッションは終了扱いとなります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKTermCommand.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKUdpPortCommand">
            <summary>
            UDP の待ち受けポートを指定します。
            設定したポートは、SKSAVE コマンドで保存した後、電源再投入時にオートロード機能でロードした場合に有効になります。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Commands.SKUdpPortCommand.#ctor(SkstackIp.Commands.SKUdpPortCommand.Input)">
            <summary>
            コンストラクタ
            </summary>
            <param name="input">入力</param>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKUdpPortCommand.Input.Handle">
            <summary>
            対応する UDP ハンドル番号（１－６）
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Commands.SKUdpPortCommand.Input.Port">
            <summary>
            ハンドル番号に割り当てられる待ち受けポート番号(0-0xFFFF)
            0 を指定した場合は、そのハンドル番号のポートは着信しません。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Commands.SKVerCommand">
            <summary>
            SKSTACK IP のファームウェアバージョンを表示します。
            EVER イベントが発生します。
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.ScanMode.ActiveScanWithIE">
            <summary>
            2:アクティブスキャン（IE あり）
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.ScanMode.ActiveScanWithoutIE">
            <summary>
            3:アクティブスキャン（IE なし）
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.ScanMode.EdScan">
            <summary>
            0:ED スキャン
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.SKTableMode.EAddr">
            <summary>
            1:端末で利用可能な IP アドレス一覧
            EADDR イベントが発生します。
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.SKTableMode.ENeighbor">
            <summary>
            2:ネイバーキャッシュ
            ENEIGHBOR イベントが発生します。
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.SKTableMode.ENbr">
            <summary>
            9:ネイバーテーブル一覧
            ENBR イベントが発生します。
            TODO SKSTACK-IP(Single-hop Edition)に記述が無いが、応答するのでそのままとする
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.SKTableMode.ESec">
            <summary>
            A:MAC セキィリティのキー設定表示
            ESEC イベントが発生します。
            TODO SKSTACK-IP(Single-hop Edition)に記述が無いが、応答するのでそのままとする
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.SKTableMode.EHandle">
            <summary>
            F:TCP ハンドル状態一覧
            EHANDLE イベントが発生します。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.SKSendToSec">
            <summary>
            暗号化オプション
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.SKSendToSec.Plain">
            <summary>
            0: 必ず平文で送信
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.SKSendToSec.SecOrNotTransfer">
            <summary>
            1: SKSECENABLE コマンドで送信先がセキュリティ有効で登録されている場合、暗号化して送ります。
            登録されてない場合、または、暗号化無しで登録されている場合、データは送信されません。
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.SKSendToSec.SecOrPlain">
            <summary>
            2: SKSECENABLE コマンドで送信先がセキュリティ有効で登録されている場合、暗号化して送ります。
            登録されてない場合、または、暗号化無しで登録されている場合、データは平文で送信されます。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Events.ERXTCP">
            <summary>
            TCP でデータを受信すると通知されます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Events.ERXTCP.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXTCP.Sender">
            <summary>
            送信元 IPv6 アドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXTCP.RPort">
            <summary>
            送信元ポート番号
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXTCP.LPort">
            <summary>
            送信先ポート番号
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXTCP.DataLen">
            <summary>
            受信したデータの長さ
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXTCP.Data">
            <summary>
            受信データ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Events.ERXUDP">
            <summary>
            自端末宛ての UDP（マルチキャスト含む）を受信すると通知されます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Events.ERXUDP.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXUDP.Sender">
            <summary>
            送信元 IPv6 アドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXUDP.Dest">
            <summary>
            送信先 IPv6 アドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXUDP.RPort">
            <summary>
            送信元ポート番号
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXUDP.LPort">
            <summary>
            送信先ポート番号
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXUDP.SenderLla">
            <summary>
            送信元の MAC 層アドレス(64bit)
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXUDP.Secured">
            <summary>
            1:受信した IP パケットを構成する MAC フレームが暗号化されていた場合
            0: 受信した IP パケットを構成する MAC フレームが暗号化されていなかった場合
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXUDP.DataLen">
            <summary>
            受信したデータの長さ
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ERXUDP.Data">
            <summary>
            受信データ
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Events.ETCP">
            <summary>
            TCP の接続、切断処理が発生すると通知されます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Events.ETCP.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Events.ETCP.Status">
            <summary>
            TCP 処理ステータス
            1：相手先との接続完了（成功）
            3：切断成功、または相手先から切断された(対応するハンドル番号が通知されます)接続に失敗した(HANDLE=0 で通知されます)
            4：指定された接続元ポート番号がすでに使われている
            5：データ送信完了（成功）データ送信でタイムアウトが発生すると、ETCP 3 HANDLEで切断となり、そのハンドルは回収されます。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ETCP.Handle">
            <summary>
            イベント対象となった TCP ハンドル番号
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ETCP.Ipaddr">
            <summary>
            STATUS = 1 の場合のみ 接続先、または接続元の IP アドレスが通知されます
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ETCP.RPort">
            <summary>
            STATUS = 1 の場合のみ 相手側の接続ポート番号が通知されます
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.ETCP.LPort">
            <summary>
            STATUS = 1 の場合のみ 自端末の接続ポート番号が通知されます
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Events.EVENT">
            <summary>
            EVENT
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Events.EVENT.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Events.EVENT.Num">
            <summary>
            イベント番号
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.EVENT.Sender">
            <summary>
            イベントのトリガーとなったメッセージの発信元アドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Events.EVENT.Param">
            <summary>
            イベント固有の引数
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.ReceiveData">
            <summary>
            レスポンスの既定クラス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.ReceiveData.PlainResponse">
            <summary>
            レスポンス平文
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.ReceiveData.#ctor(System.String)">
            <summary>
            デフォルトコンストラクタ
            </summary>
            <param name="response">レスポンス平文</param>
        </member>
        <member name="M:SkstackIpDotNet.ReceiveData.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EEDSCAN">
            <summary>
            SKSCANのレスポンス
            ED スキャンの実行結果を、RSSI 値で一覧表示します。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.EEDSCAN.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="F:SkstackIpDotNet.Responses.EEDSCAN.List">
            <summary>
             ED スキャンの実行結果一覧
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EEDSCAN.ChannelRssi">
            <summary>
            ED スキャンの実行結果
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EEDSCAN.ChannelRssi.Channel">
            <summary>
            測定した周波数の論理チャンネル番号
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EEDSCAN.ChannelRssi.Rssi">
            <summary>
            測定した RSSI 値 (RSSI – 107dBm))
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EINFO">
            <summary>
            SKINFOのレスポンス
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.EINFO.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EINFO.IPAddress">
            <summary>
            端末に設定されているリンクローカルアドレスを表示します
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EINFO.Addr64">
            <summary>
            端末の IEEE 64bit MAC アドレスを表示します。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EINFO.Channel">
            <summary>
            現在使用している周波数の論理チャンネル番号を表示します。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EINFO.PanId">
            <summary>
            現在の PAN ID を表示します。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EINFO.Addr16">
            <summary>
            現在のショートアドレスを表示します。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EPANDESC">
            <summary>
            SKSCANのレスポンス
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.EPANDESC.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EPANDESC.Channel">
            <summary>
            発見した PAN の周波数（論理チャンネル番号）
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EPANDESC.ChannelPage">
            <summary>
            発見した PAN のチャンネルページ
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EPANDESC.PanID">
            <summary>
            発見した PAN の PAN ID
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EPANDESC.Addr">
            <summary>
            アクティブスキャン応答元のアドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EPANDESC.LQI">
            <summary>
            受信したビーコンの受信 RSSI
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EPANDESC.PairID">
            <summary>
            （IE が含まれる場合）相手から受信した Pairing ID
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EPONG">
            <summary>
            SKPING
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.EPONG.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EPONG.Sender">
            <summary>
            送信元 IPv6 アドレス
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.ESREG">
            <summary>
            SKSREGのレスポンスクラス
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.ESREG.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Responses.ESREG.Value">
            <summary>
            レジスタの現在値
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EVER">
            <summary>
            SKVERのレスポンス
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.EVER.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EVER.Version">
            <summary>
            x.x.x 形式のバージョン番号が ASCII 文字で出力されます。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.OKorFAIL">
            <summary>
            OKorFAILレスポンス
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.OKorFAIL.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:SkstackIpDotNet.Responses.OK">
            <summary>
            OKレスポンス
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.OK.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:SkstackIpDotNet.Responses.FAIL">
            <summary>
            FAILレスポンス
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.FAIL.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:SkstackIpDotNet.Responses.SKLL64">
            <summary>
            SKLL64コマンドの出力
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.SKLL64.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:SkstackIpDotNet.Responses.SKLL64.Ipaddr">
            <summary>
            IPv6 リンクローカルアドレスが出力されます。
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.BaseTableResponse">
            <summary>
            TABLEコマンドのレスポンス基底クラス
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.BaseTableResponse.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EADDR">
            <summary>
            SKTABLEのレスポンス
            自端末で利用可能な IP アドレス一覧
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.EADDR.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="F:SkstackIpDotNet.Responses.EADDR.List">
            <summary>
            自端末で利用可能な IPv6 アドレス一覧
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EADDR.Addr">
            <summary>
            自端末で利用可能な IPv6 アドレス
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EADDR.Addr.IPADDR">
            <summary>
            IPv6 アドレス（グローバル、リンクローカル両方を含む全て）
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EHANDLE">
            <summary>
            SKTABLEのレスポンス
            TCP ハンドル状態一覧
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.EHANDLE.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="F:SkstackIpDotNet.Responses.EHANDLE.List">
            <summary>
            TCP ハンドル状態一覧
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.EHANDLE.TcpHandleState">
            <summary>
            TCP ハンドル状態
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EHANDLE.TcpHandleState.Handle">
            <summary>
            ハンドル番号 (1-6)
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EHANDLE.TcpHandleState.IPADDR">
            <summary>
            この TCP ハンドルの接続先 IP アドレス（コロン表記）
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EHANDLE.TcpHandleState.RPORT">
            <summary>
            この TCP ハンドルの接続先ポート番号
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.EHANDLE.TcpHandleState.LPORT">
            <summary>
            この TCP ハンドルの接続元ポート番号
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.ENBR">
            <summary>
            SKTABLEのレスポンス
            ネイバーテーブル一覧
            TODO SKSTACK-IP(Single-hop Edition)に記述が無いが、応答するのでそのままとする
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.ENBR.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:SkstackIpDotNet.Responses.ENEIGHBOR">
            <summary>
            SKTABLEのレスポンス
            ネイバーキャッシュ
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.ENEIGHBOR.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="response"></param>
        </member>
        <member name="F:SkstackIpDotNet.Responses.ENEIGHBOR.List">
            <summary>
            自端末のネイバーキャッシュ内の IPv6 エントリー一覧
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.ENEIGHBOR.NaighborCache">
            <summary>
            自端末のネイバーキャッシュ内の IPv6 エントリー
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.ENEIGHBOR.NaighborCache.IPADDR">
            <summary>
            ネイバーキャッシュに登録されている IPv6 アドレス（グローバル、リンクローカル両方を含む全て）
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.ENEIGHBOR.NaighborCache.LLA">
            <summary>
            IPADDRに対応するリンク層 64bit アドレス
            SHORTADDRが 0xFFFF の場合、このフィールドにはIPADDRに対応する 64bit アドレスが表示されます。
            SHORTADDRが 0xFFFF 以外の場合、このフィールドの内容は不定になります。
            </summary>
        </member>
        <member name="P:SkstackIpDotNet.Responses.ENEIGHBOR.NaighborCache.SHORTADDR">
            <summary>
            IPADDRに対応するリンク層 16bit アドレス
            対応する 16bit アドレスがその時点で未確定の場合、0xFFFF が表示されます。
            TODO SKSTACK-IP(Single-hop Edition)に記述が無いが、応答するのでそのままとする
            </summary>
        </member>
        <member name="T:SkstackIpDotNet.Responses.ESEC">
            <summary>
            SKTABLEのレスポンス
            MAC セキィリティのキー設定表示
            TODO SKSTACK-IP(Single-hop Edition)に記述が無いが、応答するのでそのままとする
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.Responses.ESEC.#ctor(System.String)">
            <summary>
            コンストラクタ 
            </summary>
            <param name="response"></param>
        </member>
        <member name="T:SkstackIpDotNet.SKDevice">
            <summary>
            SKSTACK-IP (Single-hop Edition)
            SK コマンドのデバイス
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.#ctor(System.String,System.Int32,System.Int32,RJCP.IO.Ports.Parity,RJCP.IO.Ports.StopBits)">
            <summary>
            コンストラクタ
            </summary>
            <param name="port">The name of the COM port, such as "COM1" or "COM33".</param>
            <param name="baud">The baud rate that is passed to the underlying driver.</param>
            <param name="data">
            The number of data bits. This is checked that the driver supports the data bits
            provided. The special type 16X is not supported.
            </param>
            <param name="parity">The parity for the data stream.</param>
            <param name="stopbits">Number of stop bits.</param>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.Open">
            <summary>
            接続を開きます
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.Close">
            <summary>
            接続を閉じます
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.Dispose">
            <summary>
            デバイスを破棄します
            </summary>
        </member>
        <member name="F:SkstackIpDotNet.SKDevice.WellknownEventPrefix">
            <summary>既知のデータ受信Prefix</summary>
        </member>
        <member name="F:SkstackIpDotNet.SKDevice.receiveBuffer">
            <summary>受信途中(前回CRLFで終わっていない行)のバッファ</summary>
        </member>
        <member name="F:SkstackIpDotNet.SKDevice.multiLineBuffer">
            <summary>受信途中の複数行のバッファ</summary>
        </member>
        <member name="E:SkstackIpDotNet.SKDevice.OnEVENTReceived">
            <summary>
            EVENT
            </summary>
        </member>
        <member name="E:SkstackIpDotNet.SKDevice.OnERXTCPReceived">
            <summary>
            TCP でデータを受信すると通知されます。
            </summary>
        </member>
        <member name="E:SkstackIpDotNet.SKDevice.OnERXUDPReceived">
            <summary>
            自端末宛ての UDP（マルチキャスト含む）を受信すると通知されます。
            </summary>
        </member>
        <member name="E:SkstackIpDotNet.SKDevice.OnETCPReceived">
            <summary>
            TCP の接続、切断処理が発生すると通知されます。
            </summary>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKAddNbrAsync(System.String,System.String)">
            <summary>
            指定した IP アドレスと 64bit アドレス情報を、IP 層のネイバーキャッシュに Reachable 状態で登録します。
            これによってアドレス要請を省略して直接 IP パケットを出力することができます。
            同じ IP アドレスがエントリーされている場合は設定が上書きされます。
            ネイバーキャッシュがすでに一杯の場合は最も古いエントリーが削除され、ここで指定した IPアドレスが登録されます。
            </summary>
            <param name="ipaddr">
            登録する IPv6 アドレス
            </param>
            <param name="macaddr">
            登録 IPv6 アドレスに対応する 64bit アドレス
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKCloseAsync(System.String)">
            <summary>
            指定したハンドルに対応する TCP コネクションの切断要求を発行します。
            切断処理の結果は ETCP イベントで通知されます。
            すでに切断初折が実行中の場合、本コマンドを発行すると FAIL ER10 になります。
            </summary>
            <param name="handle">
            ハンドル番号
            SKCONNECT で接続を確立した際に受け取ったハンドル番号を指定します。
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKConnect(System.String,System.String,System.String)">
             <summary>
            指定した宛先に TCP の接続要求を発行します。
            相手側は指定したポートで TCP の接続待ち受けを開始している必要があります。
            接続処理の結果は ETCP イベントで通知されます。接続に成功した場合、ETCP イベントでコネクションに対応するハンドル番号が通知されます。
            以後、データ送信や切断処理はこのハンドル番号を指定します。
            同じLPORTとRPORTの組み合わせで E すでに何らかの宛先と接続が確立している場合、ER10 エラーとなります。
            このためLPORTは 0 以外のランダムな数値を指定することを推奨します。
            ( LPORTは自端末の待受ポート番号である必要はありません)
            接続処理の実行途中に本コマンドが発行されると ER10 エラーとなります。
            指定可能な待ち受け数とポート番号の初期値はリリースノートをご参照ください。
             </summary>
             <param name="ipAddr">接続先 IPv6 アドレス</param>
             <param name="rPort">接続先ポート番号 値域：1-65535</param>
             <param name="lPort">接続元ポート番号 値域：1-65535</param>
             <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKErase">
            <summary>
            レジスタ保存用の不揮発性メモリエリアを初期化して、未保存状態に戻します。
            本コマンドを実行後、SKLOAD コマンドを発行すると SKLOAD コマンドは ER10 エラーを返すようになります。
            </summary>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKInfoAsync">
            <summary>
            現在の主要な通信設定値を表示します。
            </summary>
            <returns>EINFO</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKJoinAsync(System.String)">
            <summary>
            指定したIPADDRに対して PaC（PANA 認証クライアント）として PANA 接続シーケンスを開始します。
            SKJOIN 発行前に PSK, PWD, Route-B ID 等のセキュリティ設定を施しておく必要があります。
            接続先は SKSTART コマンドで PAA として動作開始している必要があります。
            接続の結果はイベントで通知されます。
            PANA 接続シーケンスは PaC が PAA に対してのみ開始できます。
            接続元（PaC）：
             接続が完了すると、指定したIPADDRに対するセキュリティ設定が有効になり、以後の通信でデータが暗号化されます。
            接続先（PAA）：
             接続先はコーディネータとして動作開始している必要があります。
             PSK から生成した暗号キーを自動的に配布します。
             相手からの接続が完了すると接続元に対するセキュリティ設定が有効になり、以後の通信でデータが暗号化されます。
             １つのデバイスとの接続が成立すると、他デバイスからの新規の接続を受け付けなくなります。
            </summary>
            <param name="ipaddr">
            接続先 IP アドレス
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKLl64Async(System.String)">
            <summary>
            64 ビット MAC アドレスを IPv6 リンクローカルアドレスに変換した結果を表示します。
            </summary>
            <param name="addr64">
            64 ビット MAC アドレス
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKLoadAsync">
            <summary>
            不揮発性メモリに保存されている仮想レジスタの内容をロードします。
            何らかの要因でロードに失敗した場合、FAIL ER10 エラーになります。
            内容が保存されていない状態でロードを実行すると L ER10 になります。
            </summary>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKPingAsync(System.String)">
            <summary>
            指定した IPv6 宛てに ICMP Echo request を送信します。
            Echo reply を受信すると EPONG イベントで通知されます。
            </summary>
            <param name="ipaddr">
            Ping 送信先の IPv6 アドレス
            </param>
            <returns>EPONG</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKRegDevAsync(System.String)">
            <summary>
            セキュリティを適用するため、指定した IP アドレスを端末に登録します。
            登録数が上限の場合、FAIL ER10 が戻ります。
            </summary>
            <param name="ipaddr">
            登録対象となる IPv6 アドレス
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKRejoinAsync">
            <summary>
            現在接続中の相手に対して再認証シーケンスを開始します。
            再認証シーケンスの前に SKJOIN による接続が成功している必要があり、接続していないとER10 になります。
            再認証に成功すると、暗号キーと PANA セッション期限が更新されます。
            PaC は、PAA が指定したセッションのライフタイムの 80%が経過した時点で、自動的に再認証シーケンスを実行します。
            このため SKREJOIN コマンドは基本的に発行する必要がありませんが、任意のタイミングで再認証したい場合には本コマンドを使います。
            PAA は、セッションが更新されずにライフタイムが過ぎるとセッション終了要請を自動的に発行します。
            </summary>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKResetAsync">
            <summary>
            プロトコル・スタックの内部状態を初期化します。
            すべての内部変数が初期値に戻ります。
            ただし 64bit アドレスだけは、S01 レジスタで設定した直近の値がそのまま再利用されます。
            </summary>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKRmDevAsync(System.String)">
            <summary>
            プロトコル・スタックの内部状態を初期化します。
            すべての内部変数が初期値に戻ります。
            ただし 64bit アドレスだけは、S01 レジスタで設定した直近の値がそのまま再利用されます。
            </summary>
            <param name="target">
            削除したいエントリーの IPv6 アドレス
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKSaveAsync">
            <summary>
            現在の仮想レジスタの内容を不揮発性メモリに保存します。
            何らかの要因で保存に失敗した場合、FAIL ER10 エラーになります。
            </summary>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKScanActiveExAsync(System.UInt32,System.Byte)">
            <summary>
            
            指定したチャンネルに対してアクティブスキャン（IE あり）を実行します。
            アクティブスキャンは、PAN を発見する度に EPANDESC イベントが発生して内容が通知されます。その後、指定したすべてのチャンネルのスキャンが完了すると EVENT イベントが 0x1Eコードで発生して終了を通知します。
            Pairing 値(8 バイト)は S0A で設定します。
            Pairing ID が付与された拡張ビーコン要求を受信したコーディネータは、同じ Pairing 値が設定されている場合に、拡張ビーコンを応答します。
            MODE に 3 を指定すると、拡張ビーコン要求に Information Element を含めません。コーディネータは拡張ビーコンを応答します
            </summary>
            <param name="channelMask">
            スキャンするチャンネルをビットマップフラグで指定します。
            最下位ビットがチャンネル 33 に対応します。
            </param>
            <param name="duration">
            各チャンネルのスキャン時間を指定します。
            スキャン時間は以下の式で計算されます。
            0.01 sec * (2^DURATION + 1)
            値域：0-14
            </param>
            <returns>IEnumerable EPANDESC</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKScanActiveAsync(System.UInt32,System.Byte)">
            <summary>
            指定したチャンネルに対してアクティブスキャン（IE なし）を実行します。
            アクティブスキャンは、PAN を発見する度に EPANDESC イベントが発生して内容が通知されます。その後、指定したすべてのチャンネルのスキャンが完了すると EVENT イベントが 0x1Eコードで発生して終了を通知します。
            </summary>
            <param name="channelMask">
            スキャンするチャンネルをビットマップフラグで指定します。
            最下位ビットがチャンネル 33 に対応します。
            </param>
            <param name="duration">
            各チャンネルのスキャン時間を指定します。
            スキャン時間は以下の式で計算されます。
            0.01 sec * (2^DURATION + 1)
            値域：0-14
            </param>
            <returns>IEnumerable EPANDESC</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKScanEdAsync(System.UInt32,System.Byte)">
            <summary>
            指定したチャンネルに対してED スキャンを実行します。
            ED スキャンは、スキャンが完了した時点で EEDSCAN イベントが発生します。
            </summary>
            <param name="channelMask">
            スキャンするチャンネルをビットマップフラグで指定します。
            最下位ビットがチャンネル 33 に対応します。
            </param>
            <param name="duration">
            各チャンネルのスキャン時間を指定します。
            スキャン時間は以下の式で計算されます。
            0.01 sec * (2^DURATION + 1)
            値域：0-14
            </param>
            <returns>EEDSCAN</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKSecAsync(System.String,System.String,System.String)">
            <summary>
            指定した IP アドレスに対する MAC 層セキュリティの有効・無効を指定します。
            指定する IPADDR は、事前に SKREGDEV コマンドで登録されている必要があります。登録されていない IP アドレスを指定すると FAIL ER10 になります。
            MODEが 1 の場合、指定したIPADDRに対するMACADDR情報が更新されます。
            MODE=1 で登録に成功した場合、このMACADDRに対応する MAC 層フレームカウンタが0 で初期化されます。
            MODEが 0 の場合、セキュリティの適用が無効になるだけで、MACADDR情報は更新されません（値は無視されます）。
            本コマンドによるセキュリティ設定は送信時に適用されるものです。受信時は、受信した MACフレームの内容により必要な復号化が行われます。
            </summary>
            <param name="mode">
            0:セキュリティ無効
            1:セキュリティ適用
            </param>
            <param name="ipaddr">
            セキィリティを適用する対象の IPv6 アドレス
            </param>
            <param name="macaddr">
            対象 IPv6 アドレスに対応する 64bit アドレス
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKSendAsync(System.String,System.Byte[])">
            <summary>
            指定したハンドル番号に対応する TCP コネクションを介して接続相手にデータを送信します。
            送信処理の結果は ETCP イベントで通知されます。
            すでにデータが送信中の場合、本コマンドを発行すると FAIL ER10 になります。
            SKSEND は以下の形式で正確に指定する必要があります。
            1) アドレスは必ずコロン表記で指定してください。
            2) ポート番号は必ず４文字指定してください。
            3) データ長は必ず４文字指定してください。
            4) データは入力した内容がそのまま忠実にバイトデータとして扱われます。
            スペース、改行もそのままデータとして扱われます。
            5) データは、データ長で指定したバイト数、必ず入力してください。サイズが足りないと、指定したバイト数揃うまでコマンド受け付け状態から抜けません。
            6) データ部の入力はエコーバックされません。
            正しい例：
            SKSEND 1 0005 01234
            (“01234”は画面にエコーバックされません)
            ターミナルソフトで入力した場合、5 バイトで 0x30, 0x31. 0x32, 0x33, 0x34 が送信されます。
            受信側では、受信データの 16 進数 ASCII 表現で表示されます。
            </summary>
            <param name="handle">
            ハンドル番号
            SKCONNECT で接続を確立した際に受け取ったハンドル番号を指定します。
            </param>
            <param name="data">
            送信データ
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKSendToAsync(System.String,System.String,System.String,SkstackIp.SKSendToSec,System.Byte[])">
            <summary>
            指定した宛先に UDP でデータを送信します。
            SKSENDTO コマンドは以下の形式で正確に指定する必要があります。
            1) アドレスは必ずコロン表記で指定してください。
            2) ポート番号は必ず４文字指定してください。
            3) データ長は必ず４文字指定してください。
            4) セキュリティフラグは１文字で指定してください。
            5) データは入力した内容がそのまま忠実にバイトデータとして扱われます。スペース、改行もそのままデータとして扱われます。
            6) データは、データ長で指定したバイト数、必ず入力してください。サイズが足りないと、指定したバイト数揃うまでコマンド受け付け状態から抜けません。
            7) データ部の入力はエコーバックされません。
            </summary>
            <param name="handle">
            送信元 UDP ハンドル
            </param>
            <param name="ipaddr">
            宛先 IPv6 アドレス
            </param>
            <param name="port">
            宛先ポート番号
            </param>
            <param name="sec">
            暗号化オプション
            </param>
            <param name="data">
            送信データ
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKSetKey(System.String,System.String)">
            <summary>
            指定されたキーインデックスに対する暗号キー(128bit)を、MAC 層セキュリティコンポーネントに登録します。
            本コマンドでキーを設定後、SKSECENABLE コマンドで対象デバイスのセキュリティ設定を有効にすることで、以後、そのデバイスに対するユニキャストが MAC 層で暗号化されます。
            指定したキーの桁が 16 バイト（ASCII 32 文字）より多い場合、ER06 になります。
            桁が 16 バイトより少ない場合、キーの内容が不定になり、OK または FAIL どちらになるか不定です。必ず 32 文字を指定してください。
            暗号キーの登録容量を超えている場合、FAIL ER10 になります。指定したキーインデックスに既存の設定がある場合、新しい設定で上書き登録されます。
            登録に成功するとカレントキーインデックスが指定したINDEXに切り替わります。
            </summary>
            <param name="index">
            キーインデックス
            </param>
            <param name="key">
            128bit NWK 暗号キー
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKSetPskAsync(System.String,System.String)">
            <summary>
            PANA 認証に用いる PSK を登録します。
            すでに PSK が登録されている場合は新しい値で上書きされます。
            KEYのバイト列は ASCII２文字で１バイトの HEX 表現で指定します。そのためLENで指定する PSK 長の２倍の文字入力が必要です。
            PSK を変更するには、SKRESET でリセットした後、再度、SKSETPSK コマンドを発行する必要があります。
            ＊）PSK は 16 バイトの必要があります。そのため LEN は 0x10 以外で FAIL ER06 になります。
            またKEYが 32 文字（１６バイト）に足りない場合は、不足分が不定値になります。
            </summary>
            <param name="len">
            PSK のバイト長
            </param>
            <param name="key">
            PSK バイト列
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKSetPwdAsync(System.String,System.String)">
            <summary>
            PWD で指定したパスワードから PSK を生成して登録します。
            SKSETPSK による設定よりも本コマンドが優先され、PSK は本コマンドの内容で上書きされます。
            ＊）PWDの文字数が指定したLENに足りない場合、不足分は不定値になります。
            </summary>
            <param name="len">
            1-32
            </param>
            <param name="pwd">
            ASCII 文字
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKSetRBIDAsync(System.String)">
            <summary>
            指定されたIDから各 Route-B ID を生成して設定します。
            Pairing ID (SA レジスタ)としてIDの下位 8 文字が設定されます。
            ＊）IDは ASCII 32 文字必要で、足りない場合、不足分が不定値になります。
            </summary>
            <param name="id">
            32 桁の ASCII 文字
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKSRegAsync(System.String,System.String)">
            <summary>
            仮想レジスタの内容を表示・設定します。
            SREGに続けてVAL を指定すると値の設定、
            VALを指定しないとそのレジスタの現在値を表示します。
            値の場合は ESREG イベントで通知されます。
            </summary>
            <param name="sreg">
            アルファベット‘S’で始まるレジスタ番号を１６進数で指定されます。
            </param>
            <param name="val">
            レジスタに設定する値
            設定値域はレジスタ番号に依存します。
            </param>
            <returns>ESREG</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKStartAsync">
            <summary>
            端末を PAA (PANA 認証サーバ)として動作開始します。
            動作開始に先立って PSK, PWD, Route-B ID 等のセキュリティ設定を済ませておく必要があります。
            本コマンドを発行すると自動的にコーディネータとして動作開始し S15 レジスタ値は１になります。
            またアクティブスキャンに対して自動的に応答するようになります。
            本コマンド発行前に確立していた PANA セッションはクリアされます。
            </summary>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKTableEAddrAsync">
            <summary>
            SKSTACK IP 内の各種テーブル内容を画面表示します。
            自端末で利用可能な IP アドレス一覧
            </summary>
            <returns>EADDR</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKTableENeighborAsync">
            <summary>
            SKSTACK IP 内の各種テーブル内容を画面表示します。
            自端末で利用可能な IP アドレス一覧
            </summary>
            <returns>ENEIGHBOR</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKTableENbrAsync">
            <summary>
            SKSTACK IP 内の各種テーブル内容を画面表示します。
            ネイバーキャッシュ
            TODO SKSTACK-IP(Single-hop Edition)に記述が無いが、応答するのでそのままとする
            </summary>
            <returns>ENBR</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKTableESecAsync">
            <summary>
            SKSTACK IP 内の各種テーブル内容を画面表示します。
            ネイバーテーブル一覧
            TODO SKSTACK-IP(Single-hop Edition)に記述が無いが、応答するのでそのままとする
            </summary>
            <returns>ESEC</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKTableEHandleAsync">
            <summary>
            SKSTACK IP 内の各種テーブル内容を画面表示します。
            TCP ハンドル状態一覧
            </summary>
            <returns>EHANDLE</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKTcpPortAsync(System.String,System.String)">
            <summary>
            TCP の待ち受けポートを指定します。
            設定したポートは、SKSAVE コマンドで保存した後、電源再投入時にオートロード機能でロードした場合に有効になります。
            </summary>
            <param name="index">
            設定可能な４つのポートのどれを指定するかのインデックス（１－４）
            </param>
            <param name="port">
            設定する待ち受けポート番号(0-0xFFFF)
            0 を指定した場合、そのハンドルは未使用となりポートは着信しません。また 0xFFFF は予約番号で着信しません。
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKTermAsync">
            <summary>
            現在確立している PANA セッションの終了を要請します。
            SKTERM は PAA、PaC どちらからでも実行できます。接続が確立していない状態でコマンドを発行すると ER10 になります。
            セッションの終了に成功すると暗号通信は解除されます。
            また PAA は他デバイスからの新しい接続を受け入れることができるようになります。
            セッションの終了要請に対して相手から応答がなく EVENT 28 が発生した場合、セッションは終了扱いとなります。
            </summary>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKUdpPortAsync(System.String,System.String)">
            <summary>
            UDP の待ち受けポートを指定します。
            設定したポートは、SKSAVE コマンドで保存した後、電源再投入時にオートロード機能でロードした場合に有効になります。
            </summary>
            <param name="handle">
            対応する UDP ハンドル番号（１－６）
            </param>
            <param name="port">
            ハンドル番号に割り当てられる待ち受けポート番号(0-0xFFFF)
            0 を指定した場合は、そのハンドル番号のポートは着信しません。
            </param>
            <returns>OKorFAIL</returns>
        </member>
        <member name="M:SkstackIpDotNet.SKDevice.SKVerAsync">
            <summary>
            SKSTACK IP のファームウェアバージョンを表示します。
            EVER イベントが発生します。
            </summary>
            <returns>EVER</returns>
        </member>
    </members>
</doc>
